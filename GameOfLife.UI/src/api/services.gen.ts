// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-axios';
import type { PostGameCreateData, PostGameCreateError, PostGameCreateResponse, GetGameListError, GetGameListResponse, GetGameLoadData, GetGameLoadError, GetGameLoadResponse, GetGameFinalStateData, GetGameFinalStateError, GetGameFinalStateResponse, GetGridCreateBitArrayData, GetGridCreateBitArrayError, GetGridCreateBitArrayResponse, GetGridCreatePackedData, GetGridCreatePackedError, GetGridCreatePackedResponse, PostGridGenerateNextData, PostGridGenerateNextError, PostGridGenerateNextResponse } from './types.gen';

export const client = createClient(createConfig());

export const postGameCreate = <ThrowOnError extends boolean = false>(options?: Options<PostGameCreateData, ThrowOnError>) => { return (options?.client ?? client).post<PostGameCreateResponse, PostGameCreateError, ThrowOnError>({
    ...options,
    url: '/game/create'
}); };

export const getGameList = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => { return (options?.client ?? client).get<GetGameListResponse, GetGameListError, ThrowOnError>({
    ...options,
    url: '/game/list'
}); };

export const getGameLoad = <ThrowOnError extends boolean = false>(options?: Options<GetGameLoadData, ThrowOnError>) => { return (options?.client ?? client).get<GetGameLoadResponse, GetGameLoadError, ThrowOnError>({
    ...options,
    url: '/game/load'
}); };

export const getGameFinalState = <ThrowOnError extends boolean = false>(options?: Options<GetGameFinalStateData, ThrowOnError>) => { return (options?.client ?? client).get<GetGameFinalStateResponse, GetGameFinalStateError, ThrowOnError>({
    ...options,
    url: '/game/final-state'
}); };

export const getGridCreateBitArray = <ThrowOnError extends boolean = false>(options?: Options<GetGridCreateBitArrayData, ThrowOnError>) => { return (options?.client ?? client).get<GetGridCreateBitArrayResponse, GetGridCreateBitArrayError, ThrowOnError>({
    ...options,
    url: '/grid/create-bit-array'
}); };

export const getGridCreatePacked = <ThrowOnError extends boolean = false>(options?: Options<GetGridCreatePackedData, ThrowOnError>) => { return (options?.client ?? client).get<GetGridCreatePackedResponse, GetGridCreatePackedError, ThrowOnError>({
    ...options,
    url: '/grid/create-packed'
}); };

export const postGridGenerateNext = <ThrowOnError extends boolean = false>(options?: Options<PostGridGenerateNextData, ThrowOnError>) => { return (options?.client ?? client).post<PostGridGenerateNextResponse, PostGridGenerateNextError, ThrowOnError>({
    ...options,
    url: '/grid/generate-next'
}); };